From cf803dcd07493e8b20ccfe93e92fffb1e5612672 Mon Sep 17 00:00:00 2001
From: Sebastian Koslowski <koslowski@kit.edu>
Date: Tue, 22 Jul 2014 09:30:30 +0200
Subject: [PATCH 01/10] grc: python 2.6 compatibility fix

---
 grc/base/Platform.py   |    3 ++-
 grc/gui/Messages.py    |    4 +++-
 grc/python/Platform.py |    8 +-------
 3 files changed, 6 insertions(+), 9 deletions(-)

diff --git a/grc/base/Platform.py b/grc/base/Platform.py
index d322a16..25d5939 100644
--- a/grc/base/Platform.py
+++ b/grc/base/Platform.py
@@ -92,7 +92,8 @@ class Platform(_Element):
 
     def iter_xml_files(self):
         """Iterator for block descriptions and category trees"""
-        for block_path in self._block_paths:
+        get_path = lambda x: os.path.abspath(os.path.expanduser(x))
+        for block_path in map(get_path, self._block_paths):
             if os.path.isfile(block_path):
                 yield block_path
             elif os.path.isdir(block_path):
diff --git a/grc/gui/Messages.py b/grc/gui/Messages.py
index 3fa78f8..f220b6d 100644
--- a/grc/gui/Messages.py
+++ b/grc/gui/Messages.py
@@ -19,6 +19,7 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 
 import traceback
 import sys
+import os
 
 ## A list of functions that can receive a message.
 MESSENGERS_LIST = list()
@@ -49,6 +50,7 @@ register_messenger(sys.stdout.write)
 ###########################################################################
 def send_init(platform):
     p = platform
+    get_paths = lambda x: (os.path.abspath(os.path.expanduser(x)), x)
     send('\n'.join([
         "<<< Welcome to %s %s >>>" % (p.get_name(), p.get_version()),
         "",
@@ -56,7 +58,7 @@ def send_init(platform):
         "Block paths:"
     ] + [
         "\t%s" % path + (" (%s)" % opath if opath != path else "")
-            for path, opath in p.get_block_paths().iteritems()
+            for path, opath in map(get_paths, p.get_block_paths())
     ]) + "\n")
 
 def send_page_switch(file_path):
diff --git a/grc/python/Platform.py b/grc/python/Platform.py
index f4f55e9..93527a1 100644
--- a/grc/python/Platform.py
+++ b/grc/python/Platform.py
@@ -18,7 +18,6 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 """
 
 import os
-from collections import OrderedDict
 from gnuradio import gr
 from .. base.Platform import Platform as _Platform
 from .. gui.Platform import Platform as _GUIPlatform
@@ -36,17 +35,12 @@ import Constants
 COLORS = [(name, color) for name, key, sizeof, color in Constants.CORE_TYPES]
 
 class Platform(_Platform, _GUIPlatform):
-
     def __init__(self):
         """
         Make a platform for gnuradio.
         """
         #ensure hier dir
         if not os.path.exists(HIER_BLOCKS_LIB_DIR): os.mkdir(HIER_BLOCKS_LIB_DIR)
-        # Convert block paths to absolute paths:
-        # - Create a mapping from the absolute path to what was passed in
-        # - Keep each unique absolute path and maintain order
-        block_paths = OrderedDict(map(lambda x: (os.path.abspath(x), x), BLOCKS_DIRS))
         #init
         _Platform.__init__(
             self,
@@ -55,7 +49,7 @@ class Platform(_Platform, _GUIPlatform):
             key='grc',
             license=__doc__.strip(),
             website='http://gnuradio.org/redmine/wiki/gnuradio/GNURadioCompanion',
-            block_paths=block_paths,
+            block_paths=BLOCKS_DIRS,
             block_dtd=BLOCK_DTD,
             default_flow_graph=DEFAULT_FLOW_GRAPH,
             generator=Generator,
-- 
1.7.10.4

