From 8fdbc1bfb1e9633f13956862840ae1a60ec40544 Mon Sep 17 00:00:00 2001
From: Jacob Gilbert <mrjacobagilbert@gmail.com>
Date: Wed, 14 Feb 2018 19:05:41 -0800
Subject: [PATCH 090/108] logging: updated doxygen with section about how to
 use logging module in OOT modules

---
 docs/doxygen/other/logger.dox | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/docs/doxygen/other/logger.dox b/docs/doxygen/other/logger.dox
index ae6a744d00..c8e4a5daa2 100644
--- a/docs/doxygen/other/logger.dox
+++ b/docs/doxygen/other/logger.dox
@@ -212,6 +212,24 @@ This creates a pointer called LOG (which is instantiated as a
 log4cpp:LoggerPtr in the macro) that we can now use locally as the
 input to our logging macros like 'GR_LOG_INFO(LOG, "message")'.
 
+\subsection using_logging Using Logging in Out of Tree Modules
+
+In order to use the logging interface in an out of tree module based on a
+gr_modtool template module, several CMake modifications are required.
+Without these changes, logging will be disabled.
+
+GrMiscUtils.cmake module must be included in the OOT module top level
+CMakeLists.Texts file, and the GR_LOGGING() function provided by GrMiscUtils
+must be called from the same top level CMakeLists.txt file. This will
+set the appropriate build environment and during that process, attempt
+to find the log4cpp package using the FindLog4Cpp.cmake module.
+This module is not included in the module by gr_modtool, but is part of
+the GNU Radio codebase and can be copied directly into the cmake/Modules/
+directory of the OOT module.
+
+Once these CMake changes are made, the  GR logging interface will function
+as documented on this page.
+
 \section logPy Logging from Python
 
 The logging capability has been brought out python via swig. The configuration
-- 
2.11.0

