From aa2308eba953289d2058d01cee927ed26cdf1c09 Mon Sep 17 00:00:00 2001
From: Jacob Gilbert <mrjacobagilbert@gmail.com>
Date: Wed, 4 Oct 2017 07:30:36 -0700
Subject: [PATCH 75/75] runtime: Moved block-by-block setup_rpc() calls to the
 end of the flatten_aux() function where the blocks are all identified. Also
 removed a workaround to the simple_copy example that is no longer relevant
 with this fix

---
 gnuradio-runtime/lib/hier_block2_detail.cc  | 18 +++++++----
 gr-blocks/examples/ctrlport/simple_copy.grc | 50 +----------------------------
 2 files changed, 12 insertions(+), 56 deletions(-)

diff --git a/gnuradio-runtime/lib/hier_block2_detail.cc b/gnuradio-runtime/lib/hier_block2_detail.cc
index 49eb34a6d1..f488c25de5 100644
--- a/gnuradio-runtime/lib/hier_block2_detail.cc
+++ b/gnuradio-runtime/lib/hier_block2_detail.cc
@@ -787,13 +787,6 @@ namespace gr {
     std::vector<basic_block_sptr>::const_iterator b;   // Because flatten_aux is const
     for(b = d_blocks.begin(); b != d_blocks.end(); b++) {
       tmp.push_back(*b);
-      // for every block, attempt to setup RPC
-      if(ctrlport_on) {
-        if(!(*b)->is_rpc_set()) {
-          (*b)->setup_rpc();
-          (*b)->rpc_set();
-        }
-      }
     }
 
     // Now add the list of connected input blocks
@@ -901,6 +894,17 @@ namespace gr {
       std::cout << "flatten_aux finished in top_block" << std::endl;
       sfg->dump();
     }
+
+    // if ctrlport is enabled, call setup RPC for all blocks in the flowgraph
+    if(ctrlport_on) {
+      for(b = blocks.begin(); b != blocks.end(); b++) {
+        if(!(*b)->is_rpc_set()) {
+          (*b)->setup_rpc();
+          (*b)->rpc_set();
+          //std::cout << "\t- setup_rpc was run for block " << (*b)->alias() << std::endl;
+        }
+      }
+    }
   }
 
   void
diff --git a/gr-blocks/examples/ctrlport/simple_copy.grc b/gr-blocks/examples/ctrlport/simple_copy.grc
index a52c350ded..f61c6cd18a 100644
--- a/gr-blocks/examples/ctrlport/simple_copy.grc
+++ b/gr-blocks/examples/ctrlport/simple_copy.grc
@@ -1,5 +1,5 @@
 <?xml version='1.0' encoding='utf-8'?>
-<?grc format='1' created='3.7.11'?>
+<?grc format='1' created='3.7.12'?>
 <flow_graph>
   <timestamp>Sat Mar 16 22:03:14 2013</timestamp>
   <block>
@@ -393,48 +393,6 @@ to enable/disablethis block</value>
     </param>
   </block>
   <block>
-    <key>epy_block</key>
-    <param>
-      <key>alias</key>
-      <value></value>
-    </param>
-    <param>
-      <key>_io_cache</key>
-      <value>('Null Msg Source', 'blk', [], [], [('fake_output', 'message', 1)], '', [])</value>
-    </param>
-    <param>
-      <key>_source_code</key>
-      <value># Block that doesn't do anything, just used to get a msg input port on another block exposed to ControlPort
-from gnuradio import gr
-import pmt
-class blk(gr.basic_block):
-    def __init__(self): 
-        gr.basic_block.__init__(self,name='Null Msg Source',in_sig=[],out_sig=[])
-        self.message_port_register_out(pmt.intern("fake_output"))
-</value>
-    </param>
-    <param>
-      <key>comment</key>
-      <value></value>
-    </param>
-    <param>
-      <key>_enabled</key>
-      <value>True</value>
-    </param>
-    <param>
-      <key>_coordinate</key>
-      <value>(357, 218)</value>
-    </param>
-    <param>
-      <key>_rotation</key>
-      <value>0</value>
-    </param>
-    <param>
-      <key>id</key>
-      <value>epy_block_0</value>
-    </param>
-  </block>
-  <block>
     <key>note</key>
     <param>
       <key>alias</key>
@@ -861,10 +819,4 @@ python simple_copy_controller.py 127.0.0.1 &lt;PORT&gt; true</value>
     <source_key>0</source_key>
     <sink_key>0</sink_key>
   </connection>
-  <connection>
-    <source_block_id>epy_block_0</source_block_id>
-    <sink_block_id>blocks_copy_0</sink_block_id>
-    <source_key>fake_output</source_key>
-    <sink_key>en</sink_key>
-  </connection>
 </flow_graph>
-- 
2.11.0

