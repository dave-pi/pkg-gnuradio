From 372081eb552242d947d6a93b7991c6077059a798 Mon Sep 17 00:00:00 2001
From: Tim O'Shea <tim.oshea753@gmail.com>
Date: Sun, 1 Dec 2013 10:34:42 -0500
Subject: [PATCH 03/25] volk: using union for float to int conversion in
 volk_32f_invsqrt_32f.

Removes warning about type-punned pointer. Also, produces noticeable speed increase using GCC, though slightly slower with clang.
---
 volk/kernels/volk/volk_32f_invsqrt_32f.h |   26 ++++++++++++++------------
 volk/lib/testqa.cc                       |    1 +
 2 files changed, 15 insertions(+), 12 deletions(-)

diff --git a/volk/kernels/volk/volk_32f_invsqrt_32f.h b/volk/kernels/volk/volk_32f_invsqrt_32f.h
index 17dfe3b..994eccf 100644
--- a/volk/kernels/volk/volk_32f_invsqrt_32f.h
+++ b/volk/kernels/volk/volk_32f_invsqrt_32f.h
@@ -4,22 +4,24 @@
 #include <inttypes.h>
 #include <stdio.h>
 #include <math.h>
+#include <string.h>
 
 static inline float Q_rsqrt( float number )
 {
-        long i;
-        float x2, y;
-        const float threehalfs = 1.5F;
- 
-        x2 = number * 0.5F;
-        y  = number;
-        i  = * ( long * ) &y;                       // evil floating point bit level hacking
-        i  = 0x5f3759df - ( i >> 1 );               // what the fuck?
-        y  = * ( float * ) &i;
-        y  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration
-//      y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed
+  float x2;
+  const float threehalfs = 1.5F;
+  union f32_to_i32 {
+    int32_t i;
+    float f;
+  } u;
+
+  x2 = number * 0.5F;
+  u.f = number;
+  u.i = 0x5f3759df - ( u.i >> 1 );               // what the fuck?
+  u.f = u.f * ( threehalfs - ( x2 * u.f * u.f ) );   // 1st iteration
+  //u.f  = u.f * ( threehalfs - ( x2 * u.f * u.f ) );   // 2nd iteration, this can be removed
  
-        return y;
+  return u.f;
 }
 
 #ifdef LV_HAVE_SSE
diff --git a/volk/lib/testqa.cc b/volk/lib/testqa.cc
index f5b0c07..d698c90 100644
--- a/volk/lib/testqa.cc
+++ b/volk/lib/testqa.cc
@@ -88,3 +88,4 @@ VOLK_RUN_TESTS(volk_32f_x2_multiply_32f, 1e-4, 0, 20462, 1);
 VOLK_RUN_TESTS(volk_32fc_s32fc_multiply_32fc, 1e-4, 0, 20462, 1);
 VOLK_RUN_TESTS(volk_32f_s32f_multiply_32f, 1e-4, 0, 20462, 1);
 VOLK_RUN_TESTS(volk_32fc_s32fc_rotatorpuppet_32fc, 1e-2, (lv_32fc_t)lv_cmake(0.953939201, 0.3), 20462, 1);
+VOLK_RUN_TESTS(volk_32f_invsqrt_32f, 1e-2, 0, 20462, 1);
-- 
1.7.10.4

